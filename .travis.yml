language: go
env:
- CHANGE_MINIKUBE_NONE_USER=true
- MINIKUBE_WANTREPORTERRORPROMPT=false
- MINIKUBE_WANTUPDATENOTIFICATION=false
- MINIKUBE_HOME=$HOME
- KUBECONFIG=$HOME/.kube/config

go:
  - 1.8.3

services: docker

install: true

before_script:
  # Download kubectl, which is a requirement for using minikube.
  - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
  # Download minikube.
  - curl -Lo minikube.bin https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube.bin && sudo mv minikube.bin /usr/local/bin/minikube
  - mkdir $HOME/.kube || true
  - touch $HOME/.kube/config
  - sudo -E minikube start --v=999 --logtostderr --vm-driver=none
  # Fix the kubectl context, as it's often stale.
  - minikube update-context
  # Wait for Kubernetes to be up and ready.
  - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
  # Download and initialize helm.
  #- ./openebs/ci/ubuntu-compile-nsenter.sh && sudo cp .tmp/util-linux-2.30.2/nsenter /usr/bin

script:
  # Verify that minkube is setup
  - kubectl cluster-info
